AWSTemplateFormatVersion: 2010-09-09
Description: Create Redis Slaves
Parameters:
  NumberOfSlaves:
    Type: Number
    Description: The number of redis slaves to lanuch
    Default: 3
  InstanceType:
    Description: Select On-Demand Instance Type.
    Type: String
    Default: r4.large
    AllowedValues:
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - c5d.large
      - c5d.xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5d.9xlarge
      - c5d.18xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - h1.16xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - i3.metal
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - x1e.32xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
  SubnetsId:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Set the subnets of the slaves
  SecurityGroups:
    Type: List<AWS::EC2::SecurityGroup::Id>
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  SpotinstToken:
    Type: String
  SpotinstAccountId:
    Type: String
    Default: "act-1234"
  KeyPairOfInstance:
    Type: AWS::EC2::KeyPair::KeyName
  TargetGroupArn:
    Description: "TargetGroup arn for loadbalancer"
    Type: "String"
    Default: "arn:aws:elasticloadbalancing:example"
  MasterIP:
    Description: The IP of redis Master
    Type: "String"
Resources:
  SpotinstElastigroup:
    Type: 'Custom::elasticgroup'
    Properties:
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:178579023202:function:spotinst-cloudformation'
      accessToken: !Ref SpotinstToken
      accountId: !Ref SpotinstAccountId
      group:
        name: 'CFN-elastigroup-redis-slaves'
        region: !Sub ${AWS::Region}
        strategy:
          risk: 100
          availabilityVsCost: balanced
          drainingTimeout: 120
          utilizeReservedInstances: false
          persistence:
            shouldPersistBlockDevices: false
            shouldPersistRootDevice: true
            shouldPersistPrivateIp: true
        capacity:
          target: !Ref NumberOfSlaves
          minimum: !Ref NumberOfSlaves
          maximum: !Ref NumberOfSlaves
          unit: instance
        compute:
          instanceTypes:
            ondemand: !Ref InstanceType
            spot:
              - r4.xlarge
              - r4.2xlarge
              - r3.xlarge
              - r3.2xlarge
              - r5.xlarge
              - r5.2xlarge
          subnetIds: !Ref SubnetsId
          launchSpecification:
            monitoring: false
            imageId: !Ref LatestAmiId
            keyPair: !Ref KeyPairOfInstance
            userData: 
              Fn::Base64:
                Fn::Sub: 
                 - #!bin/bash

                  sudo yum -y update
                  sudo yum -y install gcc gcc-c++ make jemalloc tcl
                  
                  sudo mkdir /etc/redis /var/lib/redis
                  
                  cd /usr/local/src
                  sudo wget "http://download.redis.io/redis-stable.tar.gz"
                  sudo tar vxzf "redis-stable.tar.gz"
                  sudo rm -f "redis-stable.tar.gz"
                  cd "redis-stable"
                  sudo make distclean
                  sudo make
                  sudo make install

                  sudo sed -e "s/^bind 127.0.0.1$/bind $$(hostname -I | xargs)/" -e "s/^# cluster-enabled yes$/cluster-enabled yes/" -e "s/^# cluster-config-file nodes-6379.conf$/cluster-config-file nodes-6379.conf/" -e "s/^# cluster-node-timeout 15000$/cluster-node-timeout 15000/"  -e "s/^daemonize no$/daemonize yes/" -e "s/^dir \.\//dir \/var\/lib\/redis\//" -e "s/^loglevel verbose$/loglevel notice/" -e "s/^logfile \"\"$/logfile \/var\/log\/redis.log/" redis.conf | sudo tee ./redisNew.conf

                  redis-server ./redisNew.conf
                  redis-cli --cluster add-node $$(hostname -I | xargs):6379 ${MasterIP}:6379 --cluster-slave
                 - MasterIP: !Ref MasterIP
            securityGroupIds: !Ref SecurityGroups
            loadBalancersConfig: 
              loadBalancers:
               - arn: !Ref TargetGroupArn
                 type: "TARGET_GROUP"
          product: Linux/UNIX
Outputs: 
  groupId:
    Value: !Ref SpotinstElastigroup